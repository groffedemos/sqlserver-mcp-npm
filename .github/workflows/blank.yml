name: sqlserver-mcp-npm

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PATH_PROJECT_FILE: ./sql-ai/MssqlMcp/dotnet/MssqlMcp/MssqlMcp.csproj
  PATH_PROJECT: ./sql-ai/MssqlMcp/Node/
  NUGET_SERVER: https://api.nuget.org/v3/index.json
  SQLSERVER_MCP_REPO: https://github.com/Azure-Samples/SQL-AI-samples.git
  NPM_REGISTRY: https://registry.npmjs.org/

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: ${{ env.NPM_REGISTRY }}

      - name: Clonar repositorio com o MCP Server do SQL Server
        run: git clone ${{ env.SQLSERVER_MCP_REPO }} sql-ai

      - name: Exibir conteudos do repositorio clonado
        run: |
          pwd
          ls -l
          echo
          echo
          cd sql-ai
          pwd
          ls -l
          echo
          echo
          cd MssqlMcp/Node
          pwd
          ls -l

      - name: Instalar dependencias
        run: |
          cd ${{ env.PATH_PROJECT }}
          npm install

      - name: Build do package
        run: |
          cd ${{ env.PATH_PROJECT }}
          if [ -f package.json ] && grep -q '"build"' package.json; then
            npm run build
          fi

      # - name: Gerar README.md para o package
      #   run: |
      #     cd ${{ env.PATH_PROJECT }}
      #     cat <<EOF > README.md
      #     # MCP SQL Server Tool

      #     This is a **.NET Global Tool** for running the **SQL Server MCP Server**.

      #     This tool was generated by **Renato Groffe** and is based on the **official (still in Preview) implementation** of
      #     the **SQL Server MCP Server**: https://github.com/Azure-Samples/SQL-AI-samples/blob/main/MssqlMcp/dotnet/README.md
      #     EOF

      # - name: Exibir conteudo do README.md gerado para o package
      #   run: |
      #     cd ${{ env.PATH_PROJECT }}
      #     cat README.md
          
      # - name: Exibir conteudo do arquivo .csproj antes das alteracoes
      #   run: cat ${{ env.PATH_PROJECT_FILE }}
      
      # - name: Alterar o arquivo .csproj para buildar a aplicacao como uma Global Tool
      #   run: |
      #     sed -i "/<\/PropertyGroup>/{
      #       h
      #       r /dev/stdin
      #       g
      #       n
      #     }" ${{ env.PATH_PROJECT_FILE }} <<'EOF'
          
      #       <PropertyGroup>
      #         <AssemblyName>mcpsqlserver-preview-202508d</AssemblyName>
      #         <PackAsTool>true</PackAsTool>
      #         <ToolCommandName>mcpsqlserver</ToolCommandName>
      #         <Authors>Renato Groffe</Authors>
      #         <Company>Groffe</Company>
      #         <PackageTags>NuGet;.NET;Tool;Sample</PackageTags>
      #         <Description>
      #           This tool was generated based on the .NET implementation of the SQL Server MCP Server.
      #         </Description>
      #       </PropertyGroup>

      #       <PropertyGroup>
      #         <PackageReadmeFile>README.md</PackageReadmeFile>
      #       </PropertyGroup>

      #       <ItemGroup>
      #         <None Include="README.md" Pack="true" PackagePath="\" />
      #       </ItemGroup>
          
      #     EOF

      # - name: Exibir conteudo do arquivo .csproj apos as alteracoes
      #   run: cat ${{ env.PATH_PROJECT_FILE }}

#      - name: Geracao do package
#        run: dotnet pack ${{ env.PATH_PROJECT_FILE }} -c Release -o out
      
      # - name: Exibir arquivos gerados apos build
      #   run: |
      #     cd out
      #     ls -l
  
      - name: Push no NuGet
        run: |
          cd out
          dotnet nuget push *.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ env.NUGET_SERVER }}
